#######################################################################
# 
#   Copyright (c) 2016 Orange
#   valentin.boucher@orange.com
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
########################################################################

########################################################################
# This Blueprint deploy the clearwater IMS on an openstack environment
########################################################################

tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3/plugin.yaml
  - https://raw.githubusercontent.com/boucherv-orange/cloudify-openstack-adds-plugin/master/plugin.yaml
  - http://www.getcloudify.org/spec/docker-plugin/1.3.1/plugin.yaml
  - types/monitoring.yaml
  - types/clearwater.yaml

inputs:

  image_id:
    type: string
    description: Image ID of the agent VM's (Ubuntu 14.04 for clearwater)

  flavor_id:
    type: string
    description: Flavor ID of the agent VM's (RAM >= 2 GB)

  agent_user:
    type: string
    default: ubuntu
    description: User for connecting to agent VM's

  external_network_name:
    type: string
    description: Network that will be the floating IP

  public_domain:
    type: string
    description: Sip domain for sip users and bono load-balancing

  private_domain:
    type: string
    default: site1.clearwater.local
    description: Sip domain for Internal communication

  local_site_name:
    type: string
    description: Name of local site for multisite configuration

  remote_site_name:
    type: string
    description: Name of remote site for multisite configuration 

  dns_ips:
    default: []
    description: ips of desginate api and dns server

  etcd_ip:
    type: string
    description: ip of etcd cluster

node_types:

  # Global types for VMs
  #   - specifies defaults flavor, image and user agent to use for VMs
  #   - install monitoring agent on VMs
  #   - adding some monitoring collectors (CPU, RAM, DISK and Network)

  clearwater.nodes.MonitoredServer:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
        default:
          user: { get_input: agent_user }
      server:
        default:
          image: { get_input: image_id }
          flavor: { get_input: flavor_id }
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              default:
                interval: 5
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                default:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}

  clearwater.nodes.config:
    derived_from: clearwater.nodes.base.config
    properties:
      private_domain:
        type: string
        default: { get_input: private_domain }
      public_domain:
        type: string
        default: { get_input: public_domain }
      secret_code:
        type: string
        default: secret
      local_site_name:
        type: string
        default: { get_input: local_site_name }
      remote_site_name:
        type: string
        default: { get_input: remote_site_name }
      dns_ips:
        default: { get_input: dns_ips }
      etcd_ip:
        default: { get_input: etcd_ip }

relationships:
  cw_base_connected_to_DNS:
    derived_from: cloudify.openstack_adds.node_connected_to_DNS
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: openstack_adds.designate_plugin.recordsets.add_node
          executor: central_deployment_agent
          inputs:
            domain:
              default: { get_input: private_domain }
            record_ip:
              default: ""
            other_roles: 
              default: []
            other_records:
              default: []
        unlink:
          implementation: openstack_adds.designate_plugin.recordsets.del_node
          executor: central_deployment_agent
          inputs:
            domain:
              default: { get_input: private_domain }
            record_ip:
              default: ""
            other_roles: 
              default: []
            other_records:
              default: []

node_templates:

  manager_host:
    type: cloudify.nodes.Compute
    properties:
      install_agent: true
      ip: '127.0.0.1'
      cloudify_agent:
        user: cloud
        key: ~/my.key

  clearwater_mgmt_container:
    type: cloudify.docker.Container
    properties:
      name: clearwater-management
      image:
        repository: boucherv/clearwater-management
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: docker.docker_plugin.tasks.create_container
          inputs:
            params:
              detach: true
              stdin_open: true
              tty: true
              ports:
                - 4000
                - 2380
              command: ./start.sh
        start:
          implementation: docker.docker_plugin.tasks.start
          inputs:
            params:
              network_mode: host
              port_bindings:
                4000: 4000
                2380: 2380
              binds: 
                - /etc/clearwater/local_config:/etc/clearwater/local_config
                - /etc/clearwater/shared_config:/etc/clearwater/shared_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.connected_to
        target: config

  config:
    type: clearwater.nodes.config
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host


  # Declare host VMs and attach them at floating ip or security group
  sprout_host:
    type: clearwater.nodes.MonitoredServer
    instances:
      deploy: 1
    relationships:
      - target: base_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: internal_sip_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: sprout_security_group
        type: cloudify.openstack.server_connected_to_security_group

  bono_host:
    type: clearwater.nodes.MonitoredServer
    instances:
      deploy: 1
    relationships:
      - target: bono_floatingip
        type: cloudify.openstack.server_connected_to_floating_ip

      - target: base_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: bono_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: internal_sip_security_group
        type: cloudify.openstack.server_connected_to_security_group

  ellis_host:
    type: clearwater.nodes.MonitoredServer
    relationships:
      - target: ellis_floatingip
        type: cloudify.openstack.server_connected_to_floating_ip

      - target: base_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: ellis_security_group
        type: cloudify.openstack.server_connected_to_security_group

  homestead_host:
    type: clearwater.nodes.MonitoredServer
    instances:
      deploy: 1
    relationships:
      - target: base_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: homestead_security_group
        type: cloudify.openstack.server_connected_to_security_group

  ralf_host:
    type: clearwater.nodes.MonitoredServer
    instances:
      deploy: 1
    relationships:
      - target: base_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: ralf_security_group
        type: cloudify.openstack.server_connected_to_security_group

  homer_host:
    type: clearwater.nodes.MonitoredServer
    instances:
      deploy: 1
    relationships:
      - target: base_security_group
        type: cloudify.openstack.server_connected_to_security_group

      - target: homer_security_group
        type: cloudify.openstack.server_connected_to_security_group

  proxy_host:
    type: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
          user: { get_input: agent_user }
      image: { get_input: image_id }
      flavor: { get_input: flavor_id }
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              interval: 10
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall

  # Declare clearwater and other software
  sprout:
    type: clearwater.nodes.sprout
    relationships:
      - type: cloudify.relationships.contained_in
        target: sprout_host
      - type: cw_base_connected_to_DNS
        target: dns
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            establish:
              inputs:
                other_roles: 
                  - icscf
                  - scscf
                other_records: 
                  SRV:
                    _sip._tcp.sprout: "0 0 5054"
                    _sip._tcp.scscf.sprout: "0 0 5054"
                    _sip._tcp.icscf.sprout: "0 0 5052"
            unlink:
              inputs:
                other_roles: 
                  - icscf
                  - scscf
                other_records: 
                  SRV:
                    _sip._tcp.sprout: "0 0 5054"
                    _sip._tcp.scscf.sprout: "0 0 5054"
                    _sip._tcp.icscf.sprout: "0 0 5052"
      - type: monitors_sprout_nodes
        target: proxy_node

  bono:
    type: clearwater.nodes.bono
    relationships:
      - type: cloudify.relationships.contained_in
        target: bono_host
      - type: cloudify.openstack_adds.node_connected_to_DNS
        target: dns
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            establish:
              inputs:
                domain: { get_input: public_domain }
                record_ip: { get_attribute: [ bono_floatingip, floating_ip_address ]}
                other_records: 
                  SRV:
                    _sip._tcp: "0 0 5060"
                    _sip._udp: "0 0 5060"
            unlink:
              inputs:
                domain: { get_input: public_domain }
                record_ip: { get_attribute: [ bono_floatingip, floating_ip_address ]}
                other_records: 
                  SRV:
                    _sip._tcp: "0 0 5060"
                    _sip._udp: "0 0 5060"
      - type: monitors_bono_nodes
        target: proxy_node

  ellis:
    type: clearwater.nodes.ellis
    relationships:
      - type: cloudify.relationships.contained_in
        target: ellis_host
      - type: cloudify.openstack_adds.node_connected_to_DNS
        target: dns
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            establish:
              inputs:
                domain: { get_input: public_domain }
                record_ip: { get_attribute: [ ellis_floatingip, floating_ip_address ]}
            unlink:
              inputs:
                domain: { get_input: public_domain }
                record_ip: { get_attribute: [ ellis_floatingip, floating_ip_address ]}

  ralf:
    type: clearwater.nodes.ralf
    relationships:
      - type: cloudify.relationships.contained_in
        target: ralf_host
      - type: cw_base_connected_to_DNS
        target: dns

  homestead:
    type: clearwater.nodes.homestead
    relationships:
      - type: cloudify.relationships.contained_in
        target: homestead_host
      - type: cw_base_connected_to_DNS
        target: dns
  homer:
    type: clearwater.nodes.homer
    relationships:
      - type: cloudify.relationships.contained_in
        target: homer_host
      - type: cw_base_connected_to_DNS
        target: dns

  dns:
    type: cloudify.openstack_adds.nodes.DNS_client
    properties:
      dns_ips: { get_input: dns_ips }
      domains:
        - { get_input: private_domain }
        - { get_input: public_domain }
      install_agent: false

  proxy_node:
    type: SNMPProxy
    relationships:
      - type: cloudify.relationships.contained_in
        target: proxy_host

  # Declare all security groups for clearwater and other nodes
  base_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: clearwater-sg_base
        description: SSH
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 22
        - remote_ip_prefix: 0.0.0.0/0
          port: 4000
        - remote_ip_prefix: 0.0.0.0/0
          port: 2380
        - remote_ip_prefix: 0.0.0.0/0
          port: 161
          protocol: udp

  bono_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: clearwater-sg_bono
        description: STUN SIP RTP 0MQ
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 3478
        - remote_ip_prefix: 0.0.0.0/0
          port: 3478
          protocol: udp
        - remote_ip_prefix: 0.0.0.0/0
          port: 5060
        - remote_ip_prefix: 0.0.0.0/0
          port: 5060
          protocol: udp
        - remote_ip_prefix: 0.0.0.0/0
          port: 5062
        - remote_ip_prefix: 0.0.0.0/0
          port_range_min: 32768
          port_range_max: 65535
          protocol: udp
        - remote_ip_prefix: 0.0.0.0/0
          port: 6669

  internal_sip_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: clearwater-sg_internal_sip
        description: Internal SIP signalling
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 5058
        - remote_ip_prefix: 0.0.0.0/0
          port: 5054
        - remote_ip_prefix: 0.0.0.0/0
          port: 5052

  sprout_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: clearwater-sg_sprout
        description: memcached Chronos 0MQ
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 11211
        - remote_ip_prefix: 0.0.0.0/0
          port: 7253
        - remote_ip_prefix: 0.0.0.0/0
          port: 6666

  ralf_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: clearwater-sg_ralf
        description: memcached Chronos REST
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 11211
        - remote_ip_prefix: 0.0.0.0/0
          port: 7253
        - remote_ip_prefix: 0.0.0.0/0
          port: 10888

  homestead_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: clearwater-sg_homestead
        description: REST Cassandra 0MQ
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 8888
        - remote_ip_prefix: 0.0.0.0/0
          port: 8889
        - remote_ip_prefix: 0.0.0.0/0
          port: 7000
        - remote_ip_prefix: 0.0.0.0/0
          port_range_min: 6667
          port_range_max: 6668

  homer_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: clearwater-sg_homer
        description: REST Cassandra 0MQ
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 7888
        - remote_ip_prefix: 0.0.0.0/0
          port: 7000
        - remote_ip_prefix: 0.0.0.0/0
          port: 6665

  ellis_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: clearwater-sg_ellis
        description: Web UI
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 80
        - remote_ip_prefix: 0.0.0.0/0
          port: 443

  # Declare floating IP for bono, bind and ellis nodes 
  bono_floatingip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

  ellis_floatingip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }


outputs:
  ellis_ip:
    value: { get_attribute: [ellis_floatingip, floating_ip_address] }
